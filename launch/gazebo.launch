<launch>

	<arg name="model" default="$(find hover)/urdf/description.urdf"/>
	<!--arg name="world" default="pista5x" /--> 
    <arg name="pause" default="true"/>
    <arg name="world" default="$(find hover)/worlds/circulo.world" />
	<!-- Inclui o arquivo de inicialização do Gazebo, fornecido pelo pacote gazebo_ros -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)" />
    <!--arg name="world_name" value="$(find pista)/worlds/$(arg world).world" /-->
    <arg name="use_sim_time" value="true"/>
    <arg name="paused" value="$(arg pause)"/>
  </include>

	<!-- define o parametro robot_description e relaciona ele com o arquivo da descrição fisica do robô (description.urdf) -->
	<param 
    name="robot_description" 
    textfile="$(find hover)/urdf/description.urdf" />

	<!-- Executa o nó gerador do pacote gazebo_ros. O nome não importa se você tiver apenas um único robô. -->
	<node 
    name="urdf_spawner" 
    pkg="gazebo_ros" 
    type="spawn_model"
    args="-y -2 -x +0.5 -urdf -model robot -param robot_description" 
    respawn="false" 
    output="screen" />
    <!-- converter o estado de cada joints em transformações TF para  o rviz -->
<node 
  name="robot_state_publisher" 
  pkg="robot_state_publisher" 
  type="robot_state_publisher"
  respawn="false" 
  output="screen">
 </node>

 <node 
  name="joint_state_publisher" 
  pkg="joint_state_publisher" 
  type="joint_state_publisher">
 </node>

<node 
    type="rviz" 
    name="rviz" 
    pkg="rviz" 
    args="-d $(find hover)/rviz/urdf.rviz"> 
</node>

<node
    name="Controle"
    pkg="hover" 
    type="line_follower.py"
    output= "screen">  
</node>

<node
    name="Set_Point"
    pkg="hover" 
    type="controle_robo.py"
    output="screen"> 
</node>
</launch>
